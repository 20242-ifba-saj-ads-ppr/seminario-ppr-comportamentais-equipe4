@startuml

interface Visitante {
  + visitarTexto(t: Texto): void
  + visitarImagem(i: Imagem): void
}

interface ElementoDocumento {
  + aceitar(v: Visitante): void
}

class Texto implements ElementoDocumento {
  + aceitar(v: Visitante): void
  + conteudo: String
}

class Imagem implements ElementoDocumento {
  + aceitar(v: Visitante): void
  + caminho: String
}

class VisitanteImpressao implements Visitante {
  + visitarTexto(t: Texto): void
  + visitarImagem(i: Imagem): void
}

class VisitanteExportacao implements Visitante {
  + visitarTexto(t: Texto): void
  + visitarImagem(i: Imagem): void
}

Texto --> ElementoDocumento
Imagem --> ElementoDocumento

VisitanteImpressao ..|> Visitante
VisitanteExportacao ..|> Visitante

ElementoDocumento o--> Visitante : aceitar(v)

note right of Texto::aceitar
  v.visitarTexto(this)
end note

note right of Imagem::aceitar
  v.visitarImagem(this)
end note

note right of Visitante
  Uma operação por tipo de elemento
end note

@enduml